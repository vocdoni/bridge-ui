---
name: Main

on: [push, pull_request]

jobs:
  node-tests:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install dependencies
        run: npm install
          npm test

      - name: Run tests
        run: npm test

  docker-release:
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stage' || startsWith(github.ref, 'refs/heads/release')
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      # - name: Set up QEMU
      #   id: qemu
      #   uses: docker/setup-qemu-action@v1
      #   with:
      #     image: tonistiigi/binfmt:latest
      #     platforms: all
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Get short branch name
        id: var
        shell: bash
        # Grab the short branch name, convert slashes to dashes
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-' )"

      - name: Push to Docker Hub and ghcr.io (main)
        uses: docker/build-push-action@v2
        if: github.ref == 'refs/heads/main'
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            vocdoni/${{ github.event.repository.name }}:latest, vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }},
            ghcr.io/vocdoni/${{ github.event.repository.name }}:latest,ghcr.io/vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }}

      - name: Push to Docker Hub and ghcr.io (main static, development)
        uses: docker/build-push-action@v2
        if: github.ref == 'refs/heads/main'
        with:
          context: .
          file: ./Dockerfile.static
          platforms: linux/amd64
          push: true
          tags: |
            vocdoni/${{ github.event.repository.name }}:latest-static, vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }}-static,
            ghcr.io/vocdoni/${{ github.event.repository.name }}:latest-static,ghcr.io/vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }}-static

      - name: Push to Docker Hub and ghcr.io (stage)
        uses: docker/build-push-action@v2
        if: github.ref == 'refs/heads/stage'
        with:
          context: .
          file: ./Dockerfile.static
          platforms: linux/amd64
          build-args: |
            VOCDONI_ENVIRONMENT=stg
            ETH_NETWORK_ID=goerli
            BOOTNODES_URL=https://bootnodes.vocdoni.net/gateways.stg.json
            SIGNALING_ORACLE_URL=https://signaling-oracle.dev.vocdoni.net/dvote
          push: true
          tags: |
            vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }},
            ghcr.io/vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }}

      - name: Push to Docker Hub and ghcr.io (release)
        uses: docker/build-push-action@v2
        if: startsWith(github.ref, 'refs/heads/release')
        with:
          context: .
          file: ./Dockerfile.static
          platforms: linux/amd64
          build-args: |
            VOCDONI_ENVIRONMENT=prod
            ETH_NETWORK_ID=mainnet
            ETH_CHAIN_ID=1
            BOOTNODES_URL=https://bootnodes.vocdoni.net/gateways.json
            SIGNALING_ORACLE_URL=https://signaling-oracle.vocdoni.net/dvote
            BLOCK_TIME=10
            ETHERSCAN_PREFIX=https://etherscan.io
            ANALYTICS_KEY=gd9ATNZG1WZ3wOqaXXE5Cl2tXzCtNeoa
            FORTMATIC_API_KEY=pk_live_A08FE109CFF97C4F
          push: true
          tags: |
            vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }},
            ghcr.io/vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }}

  gcp-release:
    runs-on: self-hosted
    if:
      startsWith(github.ref, 'refs/heads/release')
    environment: production
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
         fetch-depth: 0
      - name: Get short branch name
        id: var
        shell: bash
        # Grab the short branch name
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      - name: Get Last Branch and Semantic Version Containing String
        id: lrb
        uses: vdo/github-action-get-regex-branch@v1.0.9
        with:
          regex-string: 'release-'
      - name: Compare with current branch, exit if not last
        if: ${{ steps.lrb.outputs.last-semver-branch }} != ${{ steps.var.outputs.branch }}
        run: |
          echo "lrb: ${{ steps.lrb.outputs.last-semver-branch }}"
          echo "branch: ${{ steps.var.outputs.branch }}"
          exit 1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_PRODUCTION }}
          export_default_credentials: true
      - name: Install dependencies and build (mainnet)
        run: |
          npm install
          npm run export
        env:
          VOCDONI_ENVIRONMENT: prod
          ETH_NETWORK_ID: mainnet
          ETH_CHAIN_ID: 1
          BOOTNODES_URL: https://bootnodes.vocdoni.net/gateways.json
          SIGNALING_ORACLE_URL: https://signaling-oracle.vocdoni.net/dvote
          BLOCK_TIME: 10
          ETHERSCAN_PREFIX: https://etherscan.io
          ANALYTICS_KEY: gd9ATNZG1WZ3wOqaXXE5Cl2tXzCtNeoa
          FORTMATIC_API_KEY: pk_live_A08FE109CFF97C4F
      - name: Upload static site to GCS
        run: |
          gsutil -m cp -r build/* gs://voice.aragon.org
      - name: Install dependencies and build (xdai)
        run: |
          npm clean
          npm install
          npm run export
        env:
          VOCDONI_ENVIRONMENT: prod
          ETH_NETWORK_ID: xdai
          ETH_CHAIN_ID: 100
          BOOTNODES_URL: https://bootnodes.vocdoni.net/gateways.json
          SIGNALING_ORACLE_URL: https://signaling-oracle-xdai.vocdoni.net/dvote
          BLOCK_TIME: 10
          ETHERSCAN_PREFIX: https://etherscan.io
          ANALYTICS_KEY: gd9ATNZG1WZ3wOqaXXE5Cl2tXzCtNeoa
          FORTMATIC_API_KEY: pk_live_A08FE109CFF97C4F
      - name: Upload static site to GCS
        run: |
          gsutil -m cp -r build/* gs://voice-xdai.aragon.org
