---
name: Main

on: [push, pull_request]

jobs:
  node-tests:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Ensure yarn is installed on self-hosted
        run: npm install -g yarn

      - name: Install dependencies
        run: npm install -f

      - name: Run tests
        run: npm test

  docker-release:
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stage' || startsWith(github.ref, 'refs/heads/release')  || startsWith(github.ref, 'refs/heads/polygon')
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      # - name: Set up QEMU
      #   id: qemu
      #   uses: docker/setup-qemu-action@v1
      #   with:
      #     image: tonistiigi/binfmt:latest
      #     platforms: all
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Get short branch name and sha
        id: var
        shell: bash
        # Grab the short branch name, convert slashes to dashes
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-' )"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Push to Docker Hub and ghcr.io (main)
        uses: docker/build-push-action@v2
        if: github.ref == 'refs/heads/main'
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          build-args: |
            COMMIT_SHA=${{ steps.var.outputs.sha_short }}
            DEFAULT_ETH_CHAIN_ID=4
          # MAINNET_VOCDONI_ENVIRONMENT=
          # MATIC_VOCDONI_ENVIRONMENT=
          # RINKEBY_VOCDONI_ENVIRONMENT=
          # MAINNET_BOOTNODE_URL=
          # MATIC_BOOTNODE_URL=
          # RINKEBY_BOOTNODE_URL=
          # MAINNET_SIGNALING_ORACLE_URL=
          # MATIC_SIGNALING_ORACLE_URL=
          # RINKEBY_SIGNALING_ORACLE_URL=
          # MAINNET_ARCHIVE_IPNS_ID=
          # MATIC_ARCHIVE_IPNS_ID=
          # RINKEBY_ARCHIVE_IPNS_ID=
          # ANALYTICS_KEY=
          # FORTMATIC_API_KEY=
          # PORTIS_DAPP_ID=
          # WALLET_CONNECT_ID=
          tags: |
            vocdoni/${{ github.event.repository.name }}:latest, vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }},
            ghcr.io/vocdoni/${{ github.event.repository.name }}:latest,ghcr.io/vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }}

      - name: Push to Docker Hub and ghcr.io (main static, development)
        uses: docker/build-push-action@v2
        if: github.ref == 'refs/heads/main'
        with:
          context: .
          file: ./Dockerfile.static
          platforms: linux/amd64
          push: true
          build-args: |
            COMMIT_SHA=${{ steps.var.outputs.sha_short }}
            DEFAULT_ETH_CHAIN_ID=4
          # MAINNET_VOCDONI_ENVIRONMENT=
          # MATIC_VOCDONI_ENVIRONMENT=
          # RINKEBY_VOCDONI_ENVIRONMENT=
          # MAINNET_BOOTNODE_URL=
          # MATIC_BOOTNODE_URL=
          # RINKEBY_BOOTNODE_URL=
          # MAINNET_SIGNALING_ORACLE_URL=
          # MATIC_SIGNALING_ORACLE_URL=
          # RINKEBY_SIGNALING_ORACLE_URL=
          # MAINNET_ARCHIVE_IPNS_ID=
          # MATIC_ARCHIVE_IPNS_ID=
          # RINKEBY_ARCHIVE_IPNS_ID=

          # ANALYTICS_KEY=
          # FORTMATIC_API_KEY=
          # PORTIS_DAPP_ID=
          # WALLET_CONNECT_ID=
          tags: |
            vocdoni/${{ github.event.repository.name }}:latest-static, vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }}-static,
            ghcr.io/vocdoni/${{ github.event.repository.name }}:latest-static,ghcr.io/vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }}-static

      - name: Push to Docker Hub and ghcr.io (stage)
        uses: docker/build-push-action@v2
        if: github.ref == 'refs/heads/stage'
        with:
          context: .
          file: ./Dockerfile.static
          platforms: linux/amd64
          push: true
          build-args: |
            COMMIT_SHA=${{ steps.var.outputs.sha_short }}
            DEFAULT_ETH_CHAIN_ID=4
          # MAINNET_VOCDONI_ENVIRONMENT=
          # MATIC_VOCDONI_ENVIRONMENT=
          # RINKEBY_VOCDONI_ENVIRONMENT=
          # MAINNET_BOOTNODE_URL=
          # MATIC_BOOTNODE_URL=
          # RINKEBY_BOOTNODE_URL=
          # MAINNET_SIGNALING_ORACLE_URL=
          # MATIC_SIGNALING_ORACLE_URL=
          # RINKEBY_SIGNALING_ORACLE_URL=
          # MAINNET_ARCHIVE_IPNS_ID=
          # MATIC_ARCHIVE_IPNS_ID=
          # RINKEBY_ARCHIVE_IPNS_ID=
          # ANALYTICS_KEY=
          # FORTMATIC_API_KEY=
          # PORTIS_DAPP_ID=
          # WALLET_CONNECT_ID=
          tags: |
            vocdoni/${{ github.event.repository.name }}:latest-static, vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }}-static,
            ghcr.io/vocdoni/${{ github.event.repository.name }}:latest-static,ghcr.io/vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }}-static

      - name: Push to Docker Hub and ghcr.io (polygon)
        uses: docker/build-push-action@v2
        if: github.ref == 'refs/heads/polygon'
        with:
          context: .
          file: ./Dockerfile.static
          platforms: linux/amd64
          push: true
          build-args: |
            COMMIT_SHA=${{ steps.var.outputs.sha_short }}
            DEFAULT_ETH_CHAIN_ID=137
            MATIC_SIGNALING_ORACLE_URL=https://signaling-oracle-polygon.vocdoni.net/dvote
          # MAINNET_VOCDONI_ENVIRONMENT=
          # MATIC_VOCDONI_ENVIRONMENT=
          # RINKEBY_VOCDONI_ENVIRONMENT=
          # MAINNET_BOOTNODE_URL=
          # MATIC_BOOTNODE_URL=
          # RINKEBY_BOOTNODE_URL=
          # MAINNET_SIGNALING_ORACLE_URL=
          # RINKEBY_SIGNALING_ORACLE_URL=
          # MAINNET_ARCHIVE_IPNS_ID=
          # MATIC_ARCHIVE_IPNS_ID=
          # RINKEBY_ARCHIVE_IPNS_ID=
          # DEFAULT_ETH_CHAIN_ID=
          # ANALYTICS_KEY=
          # FORTMATIC_API_KEY=
          # PORTIS_DAPP_ID=
          # WALLET_CONNECT_ID=
          tags: |
            vocdoni/${{ github.event.repository.name }}:latest-static, vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }}-static,
            ghcr.io/vocdoni/${{ github.event.repository.name }}:latest-static,ghcr.io/vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }}-static

      - name: Push to Docker Hub and ghcr.io (release)
        uses: docker/build-push-action@v2
        if: startsWith(github.ref, 'refs/heads/release')
        with:
          context: .
          file: ./Dockerfile.static
          platforms: linux/amd64
          build-args: |
            COMMIT_SHA=${{ steps.var.outputs.sha_short }}
            ANALYTICS_KEY=1w2aWkXE1ukrJJAGi29Gbw3Yi0X
            FORTMATIC_API_KEY=pk_live_A08FE109CFF97C4F
            WALLET_CONNECT_ID=b76cba91dc954ceebff27244923224b1
            DEFAULT_ETH_CHAIN_ID=1
          # MAINNET_VOCDONI_ENVIRONMENT=prod
          # MATIC_VOCDONI_ENVIRONMENT=
          # RINKEBY_VOCDONI_ENVIRONMENT=
          # MAINNET_BOOTNODE_URL=
          # MATIC_BOOTNODE_URL=
          # RINKEBY_BOOTNODE_URL=
          # MAINNET_SIGNALING_ORACLE_URL=
          # MATIC_SIGNALING_ORACLE_URL=
          # RINKEBY_SIGNALING_ORACLE_URL=
          # MAINNET_ARCHIVE_IPNS_ID=
          # MATIC_ARCHIVE_IPNS_ID=
          # RINKEBY_ARCHIVE_IPNS_ID=
          # DEFAULT_ETH_CHAIN_ID=
          # PORTIS_DAPP_ID=
          push: true
          tags: |
            vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }},
            ghcr.io/vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }}

      - name: extract build files from image
        id: extract
        if: github.ref == 'refs/heads/main'
        uses: shrink/actions-docker-extract@v1
        with:
          image: ghcr.io/vocdoni/${{ github.event.repository.name }}:${{ steps.var.outputs.branch }}
          path: /app/build/

      - name: upload sourcemap to apm
        if: github.ref == 'refs/heads/main'
        env:
          COMMIT_SHA: ${{ steps.var.outputs.sha_short }}
          DIR: ${{ steps.extract.outputs.destination }}
        run: |
          for f in $(find "./$DIR/.next/static" -name "*.js.map") ; do
            export filename=${f%.*}
            curl -X POST https://apm-monitoring.aragon.org/assets/v1/sourcemaps -F service_name="Voice" -F service_version="$COMMIT_SHA" -F bundle_filepath="http://localhost/${filename#"./$DIR/.next"}" -F sourcemap=@$f
          done

  gcp-release:
    runs-on: self-hosted
    if: startsWith(github.ref, 'refs/heads/release')
    environment: production
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get short branch name and sha
        id: var
        shell: bash
        # Grab the short branch name
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Get Last Branch and Semantic Version Containing String
        id: lrb
        uses: vdo/github-action-get-regex-branch@v1.0.9
        with:
          regex-string: "release-"
      - name: Compare with current branch, exit if not last
        if: steps.lrb.outputs.last-semver-branch != steps.var.outputs.branch
        run: |
          echo "lrb: ${{ steps.lrb.outputs.last-semver-branch }}"
          echo "branch: ${{ steps.var.outputs.branch }}"
          exit 1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 18.x
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_PRODUCTION }}
          export_default_credentials: true
      - name: Install dependencies and build (mainnet)
        run: |
          npm install -f
          npm run export
        env:
          COMMIT_SHA: ${{ steps.var.outputs.sha_short }}
          MAINNET_VOCDONI_ENVIRONMENT: prod
          DEFAULT_ETH_CHAIN_ID: 1
          # MATIC_VOCDONI_ENVIRONMENT:
          # RINKEBY_VOCDONI_ENVIRONMENT:
          # MAINNET_BOOTNODE_URL:
          # MATIC_BOOTNODE_URL:
          # RINKEBY_BOOTNODE_URL:
          # MAINNET_SIGNALING_ORACLE_URL:
          # MATIC_SIGNALING_ORACLE_URL:
          # RINKEBY_SIGNALING_ORACLE_URL:
          # MAINNET_ARCHIVE_IPNS_ID:
          # MATIC_ARCHIVE_IPNS_ID:
          # RINKEBY_ARCHIVE_IPNS_ID:
          # DEFAULT_ETH_CHAIN_ID:
          # PORTIS_DAPP_ID:
          ANALYTICS_KEY: 1w2aWkXE1ukrJJAGi29Gbw3Yi0X
          FORTMATIC_API_KEY: pk_live_A08FE109CFF97C4F
          WALLET_CONNECT_ID: b76cba91dc954ceebff27244923224b1
      - name: Upload static site to GCS
        run: |
          gsutil -m cp -r build/* gs://voice.aragon.org
      - name: Install dependencies and build (xdai)
        run: |
          rm -rf build
          npm install -f
          npm run export
        env:
          COMMIT_SHA: ${{ steps.var.outputs.sha_short }}
          MAINNET_VOCDONI_ENVIRONMENT: prod
          DEFAULT_ETH_CHAIN_ID: 100
          # MATIC_VOCDONI_ENVIRONMENT:
          # RINKEBY_VOCDONI_ENVIRONMENT:
          # MAINNET_BOOTNODE_URL:
          # MATIC_BOOTNODE_URL:
          # RINKEBY_BOOTNODE_URL:
          # MAINNET_SIGNALING_ORACLE_URL:
          # MATIC_SIGNALING_ORACLE_URL:
          # RINKEBY_SIGNALING_ORACLE_URL:
          # MAINNET_ARCHIVE_IPNS_ID:
          # MATIC_ARCHIVE_IPNS_ID:
          # RINKEBY_ARCHIVE_IPNS_ID:
          # DEFAULT_ETH_CHAIN_ID:
          # PORTIS_DAPP_ID:
          ANALYTICS_KEY: 1w2aWkXE1ukrJJAGi29Gbw3Yi0X
          FORTMATIC_API_KEY: pk_live_A08FE109CFF97C4F
          WALLET_CONNECT_ID: b76cba91dc954ceebff27244923224b1
      - name: Upload static site to GCS
        run: |
          gsutil -m cp -r build/* gs://voice-xdai.aragon.org
